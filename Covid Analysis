-- SELECT *
-- FROM `starlit-cycle-337009.covid.covid-vaccinations` 
-- Order by 3, 4;

SELECT Location, date, total_cases, new_cases, total_deaths,population
FROM `starlit-cycle-337009.covid.covid-deaths` 
Order by 1,2; 

-- Looking at the Total Cases vs Total Deaths
-- Shows likelihood of dying if contracting covid in Australia (All age groups)

SELECT Location, date, total_cases, total_deaths, (total_deaths/total_cases)*100 AS Death_Percentage
FROM `starlit-cycle-337009.covid.covid-deaths` 
Where location = 'Australia'
Order by 1,2; 

-- Looking at Total Cases vs Population
-- Shows what % of population got covid
SELECT Location, date, total_cases, population, (total_cases/population)*100 AS Total_Cases_Percentage
FROM `starlit-cycle-337009.covid.covid-deaths` 
Where location = 'Australia'
Order by 1,2; 

-- Countries with Highest Infection Rate compared to Population

SELECT location, Population, MAX(total_cases) AS Highest_Infection_Count, MAX((total_cases/population))*100 as PercentPopulationInfected
FROM `starlit-cycle-337009.covid.covid-deaths` 
Group by 1,2
Order by 4 desc;

-- Looking at Total Population vs Vaccinations 

SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations, SUM(CAST(vac.new_vaccinations as int)) OVER (Partition by dea.location Order by dea.location, dea.Date) AS Rolling_People_Vaccinated, -- (Rolling_People_Vaccinated/population)*100
FROM `starlit-cycle-337009.covid.covid-deaths` as DEA
JOIN `starlit-cycle-337009.covid.covid-vaccinations` VAC
  ON DEA.location = VAC.location
  and DEA.date = VAC.date
where dea.continent is not null
order by 2,3;

-- USE CTE

-- With PopvsVac as ( SELECT continent , location, date, population, new_vaccinations, Rolling_People_Vaccinated) as (
-- SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations, SUM(CAST(vac.new_vaccinations as int)) OVER (Partition by dea.location Order by dea.location, dea.Date) AS Rolling_People_Vaccinated -- (Rolling_People_Vaccinated/population)*100
-- FROM `starlit-cycle-337009.covid.covid-deaths` as DEA
-- JOIN `starlit-cycle-337009.covid.covid-vaccinations` VAC
  -- ON DEA.location = VAC.location
  -- and DEA.date = VAC.date
-- where dea.continent is not null
-- order by 2,3
-- )

-- SELECT *
-- FROM PopvsVac;

-- TEST

With PopvsVac as 
( 
SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations, SUM(CAST(vac.new_vaccinations as int)) OVER (Partition by dea.location Order by dea.location, dea.Date) AS Rolling_People_Vaccinated
FROM `starlit-cycle-337009.covid.covid-deaths` as DEA
JOIN `starlit-cycle-337009.covid.covid-vaccinations` VAC
  ON DEA.location = VAC.location
  and DEA.date = VAC.date
where dea.continent is not null
-- order by 2,3
)

SELECT *, (Rolling_People_Vaccinated/population)*100 AS Rolling_People_Vaccinated_Percentage
FROM PopvsVac;

-- Create Table


-- CREATE TABLE `starlit-cycle-337009.covid.PercentPopulationVaccinated`
-- (
-- `Continent` STRING,
-- `Location` STRING,
-- `Date` datetime,
-- `Population` numeric,
-- `New_vaccinations` numeric,
-- `Rolling_People_Vaccinated` numeric
-- )

-- AS

-- SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations, SUM(CAST(vac.new_vaccinations as int)) OVER (Partition by dea.location Order by dea.location, dea.Date) AS Rolling_People_Vaccinated
-- FROM `starlit-cycle-337009.covid.covid-deaths` as DEA
-- JOIN `starlit-cycle-337009.covid.covid-vaccinations` VAC
  -- ON DEA.location = VAC.location
  -- and DEA.date = VAC.date
-- where dea.continent is not null;

-- Creating View to store data for later visualizations

Create VIEW `starlit-cycle-337009.covid.Percent_Population_Vaccinated` AS

SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations, SUM(CAST(vac.new_vaccinations as int)) OVER (Partition by dea.location Order by dea.location, dea.Date) AS Rolling_People_Vaccinated
FROM `starlit-cycle-337009.covid.covid-deaths` as DEA
JOIN `starlit-cycle-337009.covid.covid-vaccinations` VAC
  ON DEA.location = VAC.location
  and DEA.date = VAC.date
where dea.continent is not null;

